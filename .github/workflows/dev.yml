name: Dev deployment
on:
  push:
    branches:
      - dev
  workflow_dispatch:
jobs:
  checkout:
    runs-on: [self-hosted, dev]
    environment: dev
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
  create_env:
    needs: checkout
    runs-on: [self-hosted, dev]
    environment: dev
    steps: 
      - name: Create .env file
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> dev.env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> dev.env
          echo "DB_USER=${{ secrets.DB_USER }}" >> dev.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> dev.env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> dev.env
          echo "DB_DROP_SCHEMA=${{ secrets.DB_DROP_SCHEMA }}" >> dev.env
          echo "AUTH_SECRET=${{ secrets.AUTH_SECRET }}" >> dev.env
          echo "JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}" >> dev.env
          echo "PORT=${{ secrets.PORT }}" >> dev.env
  build:
    needs: create_env
    runs-on: [self-hosted, dev]
    steps:
      - name: Build website
        id: build-website
        run: npm run build
  deploy:
    needs: build
    runs-on: [self-hosted, dev]
    steps:
      - name: Run deployment
        run: NODE_ENV=dev npm run start:prod